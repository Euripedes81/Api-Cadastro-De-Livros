<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ApiCadastroDeLivros</name>
    </assembly>
    <members>
        <member name="M:ApiCadastroDeLivros.Controllers.V1.AutorController.Obter(System.Int32,System.Int32)">
            <summary>
            Buscar todos os Autores de forma paginada
            </summary>
            <remarks>
            Não é possível retornar os Autores sem paginação
            </remarks>
            <param name="pagina">Indica qual página está sendo consultada. Mínimo 1</param>
            <param name="quantidade">Indica a quantidade de registros por página. Mínimo 1 e máximo 50</param>
            <response code="200">Retorna a lista de Autores</response>
            <response code="204">Caso não haja Autores</response>   
        </member>
        <member name="M:ApiCadastroDeLivros.Controllers.V1.AutorController.Obter(System.Int32)">
            <summary>
            Buscar um Autor pelo seu Id
            </summary>
            <param name="idAutor">Id do Autor buscado</param>
            <response code="200">Retorna o Autor filtrado</response>
            <response code="204">Caso não haja Autor com este id</response>   
        </member>
        <member name="M:ApiCadastroDeLivros.Controllers.V1.AutorController.InserirAutor(ApiCadastroDeLivros.InputModel.AutorInputModel)">
            <summary>
            Inserir um Autor
            </summary>
            <param name="autorInputModel">Dados do Autor a ser inserido</param>
            <response code="200">Caso o Autor seja inserido com sucesso</response>
            <response code="422">Caso já exista um Autor com mesmo nome para a mesma produtora</response>   
        </member>
        <member name="M:ApiCadastroDeLivros.Controllers.V1.AutorController.AtualizarLivro(System.Int32,ApiCadastroDeLivros.InputModel.AutorInputModel)">
            <summary>
            Atualizar um Autor
            </summary>
            /// <param name="idAutor">Id do Autor a ser atualizado</param>
            <param name="autorInputModel">Novos dados para atualizar o Autor indicado</param>
            <response code="200">Caso o Autor seja atualizado com sucesso</response>
            <response code="404">Caso não exista um Autor com este Id</response>   
        </member>
        <member name="M:ApiCadastroDeLivros.Controllers.V1.AutorController.ApagarAutor(System.Int32)">
            <summary>
            Excluir um Autor
            </summary>
            /// <param name="idAutor">Id do Autor a ser excluído</param>
            <response code="200">Caso o Autor seja excluído com sucesso</response>
            <response code="404">Caso não exista um Autor com este Id</response>   
        </member>
        <member name="M:ApiCadastroDeLivros.Controllers.V1.LivroController.Obter(System.Int32,System.Int32)">
            <summary>
            Buscar todos os Livros de forma paginada
            </summary>
            <remarks>
            Não é possível retornar os Livros sem paginação
            </remarks>
            <param name="pagina">Indica qual página está sendo consultada. Mínimo 1</param>
            <param name="quantidade">Indica a quantidade de registros por página. Mínimo 1 e máximo 50</param>
            <response code="200">Retorna a lista de Livros</response>
            <response code="204">Caso não haja Livros</response>   
        </member>
        <member name="M:ApiCadastroDeLivros.Controllers.V1.LivroController.Obter(System.Int32)">
            <summary>
            Buscar um Livro pelo seu Id
            </summary>
            <param name="idLivro">Id do Livro buscado</param>
            <response code="200">Retorna o Livro filtrado</response>
            <response code="204">Caso não haja Livro com este id</response>   
        </member>
        <member name="M:ApiCadastroDeLivros.Controllers.V1.LivroController.InserirLivro(ApiCadastroDeLivros.InputModel.LivroInputModel)">
            <summary>
            Inserir um Livro 
            </summary>
            <param name="livroInputModel">Dados do Livro a ser inserido</param>
            <response code="200">Caso o Livro seja inserido com sucesso</response>
            <response code="422">Caso já exista um Livro cadastrado</response>   
        </member>
        <member name="M:ApiCadastroDeLivros.Controllers.V1.LivroController.AtualizarLivro(System.Int32,ApiCadastroDeLivros.InputModel.LivroInputModel)">
            <summary>
            Atualizar um Livro
            </summary>
            /// <param name="idLivro">Id do Livro a ser atualizado</param>
            <param name="livroInputModel">Novos dados para atualizar o Livro indicado</param>
            <response code="200">Caso o Livro seja atualizado com sucesso</response>
            <response code="404">Caso não exista um Livro com este Id</response>   
        </member>
        <member name="M:ApiCadastroDeLivros.Controllers.V1.LivroController.ApagarLivro(System.Int32)">
            <summary>
            Excluir um Livro
            </summary>
            /// <param name="idLivro">Id do Livro a ser excluído</param>
            <response code="200">Caso o Livro seja excluído com sucesso</response>
            <response code="404">Caso não exista um Livro com este Id</response>   
        </member>
    </members>
</doc>
